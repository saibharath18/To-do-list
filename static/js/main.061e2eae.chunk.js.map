{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["Todo","todo","index","completeTodo","removeTodo","className","style","textDecoration","isCompleted","text","onClick","TodoForm","addTodo","React","useState","value","setValue","onSubmit","e","preventDefault","type","onChange","target","App","todos","setTodos","newTodos","splice","map","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yOAGA,SAASA,EAAT,GAA0D,IAA1CC,EAAyC,EAAzCA,KAAMC,EAAmC,EAAnCA,MAAOC,EAA4B,EAA5BA,aAAcC,EAAc,EAAdA,WACvC,OACI,sBACIC,UAAU,OACVC,MAAO,CAAEC,eAAgBN,EAAKO,YAAc,eAAiB,IAFjE,UAIKP,EAAKQ,KACN,gCACI,wBAAQC,QAAS,kBAAMP,EAAaD,IAApC,sBACA,wBAAQQ,QAAS,kBAAMN,EAAWF,IAAlC,qBAMhB,SAASS,EAAT,GAAgC,IAAZC,EAAW,EAAXA,QAAW,EACDC,IAAMC,SAAS,IADd,mBACpBC,EADoB,KACbC,EADa,KAU3B,OACI,sBAAMC,SARW,SAAAC,GACjBA,EAAEC,iBACGJ,IACLH,EAAQG,GACRC,EAAS,MAIT,SACI,uBACII,KAAK,OACLf,UAAU,QACVU,MAAOA,EACPM,SAAU,SAAAH,GAAC,OAAIF,EAASE,EAAEI,OAAOP,YAyDlCQ,MAnDf,WAAgB,IAAD,EACeV,IAAMC,SAAS,CACrC,CACIL,KAAM,oBACND,aAAa,GAEjB,CACIC,KAAM,wBACND,aAAa,GAEjB,CACIC,KAAM,6BACND,aAAa,KAZV,mBACJgB,EADI,KACGC,EADH,KAqBLtB,EAAe,SAAAD,GACjB,IAAMwB,EAAQ,YAAOF,GACrBE,EAASxB,GAAOM,aAAc,EAC9BiB,EAASC,IAGPtB,EAAa,SAAAF,GACf,IAAMwB,EAAQ,YAAOF,GACrBE,EAASC,OAAOzB,EAAO,GACvBuB,EAASC,IAGb,OACI,qBAAKrB,UAAU,MAAf,SACI,sBAAKA,UAAU,YAAf,UACKmB,EAAMI,KAAI,SAAC3B,EAAMC,GAAP,OACP,cAACF,EAAD,CAEIE,MAAOA,EACPD,KAAMA,EACNE,aAAcA,EACdC,WAAYA,GAJPF,MAOb,cAACS,EAAD,CAAUC,QA7BN,SAAAH,GACZ,IAAMiB,EAAQ,sBAAOF,GAAP,CAAc,CAAEf,UAC9BgB,EAASC,YC9CFG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAI1Bb,M","file":"static/js/main.061e2eae.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./App.css\";\r\n\r\nfunction Todo({ todo, index, completeTodo, removeTodo }) {\r\n    return (\r\n        <div\r\n            className=\"todo\"\r\n            style={{ textDecoration: todo.isCompleted ? \"line-through\" : \"\" }}\r\n        >\r\n            {todo.text}\r\n            <div>\r\n                <button onClick={() => completeTodo(index)}>Complete</button>\r\n                <button onClick={() => removeTodo(index)}>x</button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction TodoForm({ addTodo }) {\r\n    const [value, setValue] = React.useState(\"\");\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        if (!value) return;\r\n        addTodo(value);\r\n        setValue(\"\");\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input\r\n                type=\"text\"\r\n                className=\"input\"\r\n                value={value}\r\n                onChange={e => setValue(e.target.value)}\r\n            />\r\n        </form>\r\n    );\r\n}\r\n\r\nfunction App() {\r\n    const [todos, setTodos] = React.useState([\r\n        {\r\n            text: \"Learn about React\",\r\n            isCompleted: false\r\n        },\r\n        {\r\n            text: \"Meet friend for lunch\",\r\n            isCompleted: false\r\n        },\r\n        {\r\n            text: \"Build really cool todo app\",\r\n            isCompleted: false\r\n        }\r\n    ]);\r\n\r\n    const addTodo = text => {\r\n        const newTodos = [...todos, { text }];\r\n        setTodos(newTodos);\r\n    };\r\n\r\n    const completeTodo = index => {\r\n        const newTodos = [...todos];\r\n        newTodos[index].isCompleted = true;\r\n        setTodos(newTodos);\r\n    };\r\n\r\n    const removeTodo = index => {\r\n        const newTodos = [...todos];\r\n        newTodos.splice(index, 1);\r\n        setTodos(newTodos);\r\n    };\r\n\r\n    return (\r\n        <div className=\"app\">\r\n            <div className=\"todo-list\">\r\n                {todos.map((todo, index) => (\r\n                    <Todo\r\n                        key={index}\r\n                        index={index}\r\n                        todo={todo}\r\n                        completeTodo={completeTodo}\r\n                        removeTodo={removeTodo}\r\n                    />\r\n                ))}\r\n                <TodoForm addTodo={addTodo} />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\nreportWebVitals();\n"],"sourceRoot":""}